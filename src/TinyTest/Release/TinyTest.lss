
TinyTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803f00  00803f00  000008de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004a4  000083a6  000003a6  0000043a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000040  00803f00  00803f00  000008de  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  000008de  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000910  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000020  00000000  00000000  00000950  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001283  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000010f2  00000000  00000000  00001bf3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000001a0  00000000  00000000  00002ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007a9  00000000  00000000  00002e85  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	28 c0       	rjmp	.+80     	; 0x54 <__bad_interrupt>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	26 c0       	rjmp	.+76     	; 0x54 <__bad_interrupt>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	1f c0       	rjmp	.+62     	; 0x54 <__bad_interrupt>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>
  1e:	1a c0       	rjmp	.+52     	; 0x54 <__bad_interrupt>
  20:	19 c0       	rjmp	.+50     	; 0x54 <__bad_interrupt>
  22:	18 c0       	rjmp	.+48     	; 0x54 <__bad_interrupt>
  24:	17 c0       	rjmp	.+46     	; 0x54 <__bad_interrupt>
  26:	16 c0       	rjmp	.+44     	; 0x54 <__bad_interrupt>
  28:	15 c0       	rjmp	.+42     	; 0x54 <__bad_interrupt>
  2a:	14 c0       	rjmp	.+40     	; 0x54 <__bad_interrupt>
  2c:	13 c0       	rjmp	.+38     	; 0x54 <__bad_interrupt>
  2e:	12 c0       	rjmp	.+36     	; 0x54 <__bad_interrupt>
  30:	11 c0       	rjmp	.+34     	; 0x54 <__bad_interrupt>
  32:	10 c0       	rjmp	.+32     	; 0x54 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_clear_bss>:
  40:	2f e3       	ldi	r18, 0x3F	; 63
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	bf e3       	ldi	r27, 0x3F	; 63
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	a0 34       	cpi	r26, 0x40	; 64
  4c:	b2 07       	cpc	r27, r18
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	42 d0       	rcall	.+132    	; 0xd6 <main>
  52:	a7 c1       	rjmp	.+846    	; 0x3a2 <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <i2c_init>:
  56:	e0 e1       	ldi	r30, 0x10	; 16
  58:	f8 e0       	ldi	r31, 0x08	; 8
  5a:	82 e0       	ldi	r24, 0x02	; 2
  5c:	84 83       	std	Z+4, r24	; 0x04
  5e:	84 e1       	ldi	r24, 0x14	; 20
  60:	86 83       	std	Z+6, r24	; 0x06
  62:	81 e0       	ldi	r24, 0x01	; 1
  64:	83 83       	std	Z+3, r24	; 0x03
  66:	08 95       	ret

00000068 <i2c_start>:
  68:	88 0f       	add	r24, r24
  6a:	80 93 17 08 	sts	0x0817, r24	; 0x800817 <character_data+0x7f844d>
  6e:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <character_data+0x7f844b>
  72:	86 ff       	sbrs	r24, 6
  74:	fc cf       	rjmp	.-8      	; 0x6e <i2c_start+0x6>
  76:	08 95       	ret

00000078 <i2c_stop>:
  78:	e0 e1       	ldi	r30, 0x10	; 16
  7a:	f8 e0       	ldi	r31, 0x08	; 8
  7c:	84 81       	ldd	r24, Z+4	; 0x04
  7e:	83 60       	ori	r24, 0x03	; 3
  80:	84 83       	std	Z+4, r24	; 0x04
  82:	08 95       	ret

00000084 <i2c_write>:
  84:	80 93 18 08 	sts	0x0818, r24	; 0x800818 <character_data+0x7f844e>
  88:	80 91 15 08 	lds	r24, 0x0815	; 0x800815 <character_data+0x7f844b>
  8c:	86 ff       	sbrs	r24, 6
  8e:	fc cf       	rjmp	.-8      	; 0x88 <i2c_write+0x4>
  90:	08 95       	ret

00000092 <init_adc>:
  92:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <character_data+0x7f8236>
  96:	10 92 01 06 	sts	0x0601, r1	; 0x800601 <character_data+0x7f8237>
  9a:	80 e5       	ldi	r24, 0x50	; 80
  9c:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <character_data+0x7f8238>
  a0:	80 eb       	ldi	r24, 0xB0	; 176
  a2:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <character_data+0x7f8239>
  a6:	10 92 04 06 	sts	0x0604, r1	; 0x800604 <character_data+0x7f823a>
  aa:	87 e0       	ldi	r24, 0x07	; 7
  ac:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <character_data+0x7f823c>
  b0:	10 92 16 06 	sts	0x0616, r1	; 0x800616 <character_data+0x7f824c>
  b4:	08 95       	ret

000000b6 <run_adc_sample>:
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <character_data+0x7f8236>
  bc:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <character_data+0x7f823e>
  c0:	80 91 08 06 	lds	r24, 0x0608	; 0x800608 <character_data+0x7f823e>
  c4:	80 fd       	sbrc	r24, 0
  c6:	fc cf       	rjmp	.-8      	; 0xc0 <run_adc_sample+0xa>
  c8:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <character_data+0x7f8246>
  cc:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <character_data+0x7f8247>
  d0:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <character_data+0x7f8236>
  d4:	08 95       	ret

000000d6 <main>:
  d6:	58 d1       	rcall	.+688    	; 0x388 <disable_prescaler>
  d8:	2d d1       	rcall	.+602    	; 0x334 <enable_display_power>
  da:	3a d0       	rcall	.+116    	; 0x150 <init_serial>
  dc:	da df       	rcall	.-76     	; 0x92 <init_adc>
  de:	5a d1       	rcall	.+692    	; 0x394 <generic_delay>
  e0:	ea df       	rcall	.-44     	; 0xb6 <run_adc_sample>
  e2:	b9 df       	rcall	.-142    	; 0x56 <i2c_init>
  e4:	6d d0       	rcall	.+218    	; 0x1c0 <init_display>
  e6:	56 d1       	rcall	.+684    	; 0x394 <generic_delay>
  e8:	5e d0       	rcall	.+188    	; 0x1a6 <clear_display>
  ea:	e0 e0       	ldi	r30, 0x00	; 0
  ec:	ff e3       	ldi	r31, 0x3F	; 63
  ee:	80 e4       	ldi	r24, 0x40	; 64
  f0:	9f e3       	ldi	r25, 0x3F	; 63
  f2:	2f ef       	ldi	r18, 0xFF	; 255
  f4:	21 93       	st	Z+, r18
  f6:	8e 17       	cp	r24, r30
  f8:	9f 07       	cpc	r25, r31
  fa:	e1 f7       	brne	.-8      	; 0xf4 <main+0x1e>
  fc:	91 d0       	rcall	.+290    	; 0x220 <draw_charmap>
  fe:	0f eb       	ldi	r16, 0xBF	; 191
 100:	13 e8       	ldi	r17, 0x83	; 131
 102:	c0 e0       	ldi	r28, 0x00	; 0
 104:	40 e0       	ldi	r20, 0x00	; 0
 106:	6c 2f       	mov	r22, r28
 108:	f8 01       	movw	r30, r16
 10a:	81 91       	ld	r24, Z+
 10c:	8f 01       	movw	r16, r30
 10e:	1d d1       	rcall	.+570    	; 0x34a <display_character>
 110:	cf 5f       	subi	r28, 0xFF	; 255
 112:	cb 30       	cpi	r28, 0x0B	; 11
 114:	b9 f7       	brne	.-18     	; 0x104 <__DATA_REGION_LENGTH__+0x4>
 116:	c1 2c       	mov	r12, r1
 118:	d1 2c       	mov	r13, r1
 11a:	76 01       	movw	r14, r12
 11c:	c5 e1       	ldi	r28, 0x15	; 21
 11e:	df e3       	ldi	r29, 0x3F	; 63
 120:	ff ef       	ldi	r31, 0xFF	; 255
 122:	cf 1a       	sub	r12, r31
 124:	df 0a       	sbc	r13, r31
 126:	ef 0a       	sbc	r14, r31
 128:	ff 0a       	sbc	r15, r31
 12a:	ed e1       	ldi	r30, 0x1D	; 29
 12c:	ff e3       	ldi	r31, 0x3F	; 63
 12e:	d7 01       	movw	r26, r14
 130:	c6 01       	movw	r24, r12
 132:	28 2f       	mov	r18, r24
 134:	2f 70       	andi	r18, 0x0F	; 15
 136:	22 93       	st	-Z, r18
 138:	24 e0       	ldi	r18, 0x04	; 4
 13a:	b6 95       	lsr	r27
 13c:	a7 95       	ror	r26
 13e:	97 95       	ror	r25
 140:	87 95       	ror	r24
 142:	2a 95       	dec	r18
 144:	d1 f7       	brne	.-12     	; 0x13a <__DATA_REGION_LENGTH__+0x3a>
 146:	ce 17       	cp	r28, r30
 148:	df 07       	cpc	r29, r31
 14a:	99 f7       	brne	.-26     	; 0x132 <__DATA_REGION_LENGTH__+0x32>
 14c:	69 d0       	rcall	.+210    	; 0x220 <draw_charmap>
 14e:	e8 cf       	rjmp	.-48     	; 0x120 <__DATA_REGION_LENGTH__+0x20>

00000150 <init_serial>:
 150:	e1 e0       	ldi	r30, 0x01	; 1
 152:	f4 e0       	ldi	r31, 0x04	; 4
 154:	80 81       	ld	r24, Z
 156:	8f ef       	ldi	r24, 0xFF	; 255
 158:	80 83       	st	Z, r24
 15a:	e4 e0       	ldi	r30, 0x04	; 4
 15c:	f4 e0       	ldi	r31, 0x04	; 4
 15e:	80 81       	ld	r24, Z
 160:	80 64       	ori	r24, 0x40	; 64
 162:	80 83       	st	Z, r24
 164:	86 eb       	ldi	r24, 0xB6	; 182
 166:	92 e0       	ldi	r25, 0x02	; 2
 168:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <character_data+0x7f843e>
 16c:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <character_data+0x7f843f>
 170:	80 ec       	ldi	r24, 0xC0	; 192
 172:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <character_data+0x7f843c>
 176:	83 e0       	ldi	r24, 0x03	; 3
 178:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <character_data+0x7f843d>
 17c:	08 95       	ret

0000017e <send_command>:
 17e:	cf 93       	push	r28
 180:	c8 2f       	mov	r28, r24
 182:	8c e3       	ldi	r24, 0x3C	; 60
 184:	71 df       	rcall	.-286    	; 0x68 <i2c_start>
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	7d df       	rcall	.-262    	; 0x84 <i2c_write>
 18a:	8c 2f       	mov	r24, r28
 18c:	7b df       	rcall	.-266    	; 0x84 <i2c_write>
 18e:	cf 91       	pop	r28
 190:	73 cf       	rjmp	.-282    	; 0x78 <i2c_stop>

00000192 <write_to_disp>:
 192:	cf 93       	push	r28
 194:	c8 2f       	mov	r28, r24
 196:	8c e3       	ldi	r24, 0x3C	; 60
 198:	67 df       	rcall	.-306    	; 0x68 <i2c_start>
 19a:	80 e4       	ldi	r24, 0x40	; 64
 19c:	73 df       	rcall	.-282    	; 0x84 <i2c_write>
 19e:	8c 2f       	mov	r24, r28
 1a0:	71 df       	rcall	.-286    	; 0x84 <i2c_write>
 1a2:	cf 91       	pop	r28
 1a4:	69 cf       	rjmp	.-302    	; 0x78 <i2c_stop>

000001a6 <clear_display>:
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	80 e4       	ldi	r24, 0x40	; 64
 1ac:	e8 df       	rcall	.-48     	; 0x17e <send_command>
 1ae:	c0 e0       	ldi	r28, 0x00	; 0
 1b0:	d4 e0       	ldi	r29, 0x04	; 4
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	ee df       	rcall	.-36     	; 0x192 <write_to_disp>
 1b6:	21 97       	sbiw	r28, 0x01	; 1
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <clear_display+0xc>
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
 1be:	08 95       	ret

000001c0 <init_display>:
 1c0:	ef 92       	push	r14
 1c2:	ff 92       	push	r15
 1c4:	0f 93       	push	r16
 1c6:	1f 93       	push	r17
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	cd b7       	in	r28, 0x3d	; 61
 1ce:	de b7       	in	r29, 0x3e	; 62
 1d0:	69 97       	sbiw	r28, 0x19	; 25
 1d2:	cd bf       	out	0x3d, r28	; 61
 1d4:	de bf       	out	0x3e, r29	; 62
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	80 93 15 08 	sts	0x0815, r24	; 0x800815 <character_data+0x7f844b>
 1dc:	89 e1       	ldi	r24, 0x19	; 25
 1de:	e6 ea       	ldi	r30, 0xA6	; 166
 1e0:	f3 e8       	ldi	r31, 0x83	; 131
 1e2:	de 01       	movw	r26, r28
 1e4:	11 96       	adiw	r26, 0x01	; 1
 1e6:	01 90       	ld	r0, Z+
 1e8:	0d 92       	st	X+, r0
 1ea:	8a 95       	dec	r24
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <init_display+0x26>
 1ee:	8e 01       	movw	r16, r28
 1f0:	0f 5f       	subi	r16, 0xFF	; 255
 1f2:	1f 4f       	sbci	r17, 0xFF	; 255
 1f4:	7e 01       	movw	r14, r28
 1f6:	8a e1       	ldi	r24, 0x1A	; 26
 1f8:	e8 0e       	add	r14, r24
 1fa:	f1 1c       	adc	r15, r1
 1fc:	f8 01       	movw	r30, r16
 1fe:	81 91       	ld	r24, Z+
 200:	8f 01       	movw	r16, r30
 202:	bd df       	rcall	.-134    	; 0x17e <send_command>
 204:	c7 d0       	rcall	.+398    	; 0x394 <generic_delay>
 206:	0e 15       	cp	r16, r14
 208:	1f 05       	cpc	r17, r15
 20a:	c1 f7       	brne	.-16     	; 0x1fc <init_display+0x3c>
 20c:	69 96       	adiw	r28, 0x19	; 25
 20e:	cd bf       	out	0x3d, r28	; 61
 210:	de bf       	out	0x3e, r29	; 62
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	ff 90       	pop	r15
 21c:	ef 90       	pop	r14
 21e:	08 95       	ret

00000220 <draw_charmap>:
 220:	8f 92       	push	r8
 222:	9f 92       	push	r9
 224:	af 92       	push	r10
 226:	bf 92       	push	r11
 228:	cf 92       	push	r12
 22a:	df 92       	push	r13
 22c:	ef 92       	push	r14
 22e:	ff 92       	push	r15
 230:	0f 93       	push	r16
 232:	1f 93       	push	r17
 234:	cf 93       	push	r28
 236:	df 93       	push	r29
 238:	80 e4       	ldi	r24, 0x40	; 64
 23a:	a1 df       	rcall	.-190    	; 0x17e <send_command>
 23c:	81 2c       	mov	r8, r1
 23e:	91 2c       	mov	r9, r1
 240:	cc 24       	eor	r12, r12
 242:	c3 94       	inc	r12
 244:	d1 2c       	mov	r13, r1
 246:	67 e0       	ldi	r22, 0x07	; 7
 248:	a6 2e       	mov	r10, r22
 24a:	b1 2c       	mov	r11, r1
 24c:	e4 01       	movw	r28, r8
 24e:	d5 95       	asr	r29
 250:	c7 95       	ror	r28
 252:	94 e0       	ldi	r25, 0x04	; 4
 254:	cc 0f       	add	r28, r28
 256:	dd 1f       	adc	r29, r29
 258:	9a 95       	dec	r25
 25a:	e1 f7       	brne	.-8      	; 0x254 <draw_charmap+0x34>
 25c:	c4 01       	movw	r24, r8
 25e:	81 70       	andi	r24, 0x01	; 1
 260:	99 27       	eor	r25, r25
 262:	76 01       	movw	r14, r12
 264:	e8 1a       	sub	r14, r24
 266:	f9 0a       	sbc	r15, r25
 268:	23 e0       	ldi	r18, 0x03	; 3
 26a:	ee 0c       	add	r14, r14
 26c:	ff 1c       	adc	r15, r15
 26e:	2a 95       	dec	r18
 270:	e1 f7       	brne	.-8      	; 0x26a <draw_charmap+0x4a>
 272:	00 e0       	ldi	r16, 0x00	; 0
 274:	10 e0       	ldi	r17, 0x00	; 0
 276:	c0 50       	subi	r28, 0x00	; 0
 278:	d1 4c       	sbci	r29, 0xC1	; 193
 27a:	f8 01       	movw	r30, r16
 27c:	43 e0       	ldi	r20, 0x03	; 3
 27e:	f5 95       	asr	r31
 280:	e7 95       	ror	r30
 282:	4a 95       	dec	r20
 284:	e1 f7       	brne	.-8      	; 0x27e <draw_charmap+0x5e>
 286:	ec 0f       	add	r30, r28
 288:	fd 1f       	adc	r31, r29
 28a:	80 81       	ld	r24, Z
 28c:	85 32       	cpi	r24, 0x25	; 37
 28e:	a8 f5       	brcc	.+106    	; 0x2fa <draw_charmap+0xda>
 290:	f8 01       	movw	r30, r16
 292:	e7 70       	andi	r30, 0x07	; 7
 294:	ff 27       	eor	r31, r31
 296:	90 e1       	ldi	r25, 0x10	; 16
 298:	89 9f       	mul	r24, r25
 29a:	e0 0d       	add	r30, r0
 29c:	f1 1d       	adc	r31, r1
 29e:	11 24       	eor	r1, r1
 2a0:	ee 0f       	add	r30, r30
 2a2:	ff 1f       	adc	r31, r31
 2a4:	e6 53       	subi	r30, 0x36	; 54
 2a6:	fc 47       	sbci	r31, 0x7C	; 124
 2a8:	60 81       	ld	r22, Z
 2aa:	71 81       	ldd	r23, Z+1	; 0x01
 2ac:	0e 2c       	mov	r0, r14
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <draw_charmap+0x94>
 2b0:	76 95       	lsr	r23
 2b2:	67 95       	ror	r22
 2b4:	0a 94       	dec	r0
 2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <draw_charmap+0x90>
 2b8:	40 e0       	ldi	r20, 0x00	; 0
 2ba:	50 e0       	ldi	r21, 0x00	; 0
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	77 27       	eor	r23, r23
 2c0:	96 01       	movw	r18, r12
 2c2:	04 2e       	mov	r0, r20
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <draw_charmap+0xaa>
 2c6:	22 0f       	add	r18, r18
 2c8:	33 1f       	adc	r19, r19
 2ca:	0a 94       	dec	r0
 2cc:	e2 f7       	brpl	.-8      	; 0x2c6 <draw_charmap+0xa6>
 2ce:	26 23       	and	r18, r22
 2d0:	37 23       	and	r19, r23
 2d2:	04 2e       	mov	r0, r20
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <draw_charmap+0xba>
 2d6:	35 95       	asr	r19
 2d8:	27 95       	ror	r18
 2da:	0a 94       	dec	r0
 2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <draw_charmap+0xb6>
 2de:	f5 01       	movw	r30, r10
 2e0:	e4 1b       	sub	r30, r20
 2e2:	f5 0b       	sbc	r31, r21
 2e4:	01 c0       	rjmp	.+2      	; 0x2e8 <draw_charmap+0xc8>
 2e6:	22 0f       	add	r18, r18
 2e8:	ea 95       	dec	r30
 2ea:	ea f7       	brpl	.-6      	; 0x2e6 <draw_charmap+0xc6>
 2ec:	82 2b       	or	r24, r18
 2ee:	4f 5f       	subi	r20, 0xFF	; 255
 2f0:	5f 4f       	sbci	r21, 0xFF	; 255
 2f2:	48 30       	cpi	r20, 0x08	; 8
 2f4:	51 05       	cpc	r21, r1
 2f6:	21 f7       	brne	.-56     	; 0x2c0 <draw_charmap+0xa0>
 2f8:	01 c0       	rjmp	.+2      	; 0x2fc <draw_charmap+0xdc>
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	4a df       	rcall	.-364    	; 0x192 <write_to_disp>
 2fe:	0f 5f       	subi	r16, 0xFF	; 255
 300:	1f 4f       	sbci	r17, 0xFF	; 255
 302:	00 38       	cpi	r16, 0x80	; 128
 304:	11 05       	cpc	r17, r1
 306:	09 f0       	breq	.+2      	; 0x30a <draw_charmap+0xea>
 308:	b8 cf       	rjmp	.-144    	; 0x27a <draw_charmap+0x5a>
 30a:	8f ef       	ldi	r24, 0xFF	; 255
 30c:	88 1a       	sub	r8, r24
 30e:	98 0a       	sbc	r9, r24
 310:	98 e0       	ldi	r25, 0x08	; 8
 312:	89 16       	cp	r8, r25
 314:	91 04       	cpc	r9, r1
 316:	09 f0       	breq	.+2      	; 0x31a <draw_charmap+0xfa>
 318:	99 cf       	rjmp	.-206    	; 0x24c <draw_charmap+0x2c>
 31a:	df 91       	pop	r29
 31c:	cf 91       	pop	r28
 31e:	1f 91       	pop	r17
 320:	0f 91       	pop	r16
 322:	ff 90       	pop	r15
 324:	ef 90       	pop	r14
 326:	df 90       	pop	r13
 328:	cf 90       	pop	r12
 32a:	bf 90       	pop	r11
 32c:	af 90       	pop	r10
 32e:	9f 90       	pop	r9
 330:	8f 90       	pop	r8
 332:	08 95       	ret

00000334 <enable_display_power>:
 334:	e0 e0       	ldi	r30, 0x00	; 0
 336:	f4 e0       	ldi	r31, 0x04	; 4
 338:	80 81       	ld	r24, Z
 33a:	88 60       	ori	r24, 0x08	; 8
 33c:	80 83       	st	Z, r24
 33e:	e4 e0       	ldi	r30, 0x04	; 4
 340:	f4 e0       	ldi	r31, 0x04	; 4
 342:	80 81       	ld	r24, Z
 344:	88 60       	ori	r24, 0x08	; 8
 346:	80 83       	st	Z, r24
 348:	08 95       	ret

0000034a <display_character>:
 34a:	90 ed       	ldi	r25, 0xD0	; 208
 34c:	98 0f       	add	r25, r24
 34e:	9a 30       	cpi	r25, 0x0A	; 10
 350:	70 f0       	brcs	.+28     	; 0x36e <display_character+0x24>
 352:	9f eb       	ldi	r25, 0xBF	; 191
 354:	98 0f       	add	r25, r24
 356:	9a 31       	cpi	r25, 0x1A	; 26
 358:	10 f4       	brcc	.+4      	; 0x35e <display_character+0x14>
 35a:	99 ec       	ldi	r25, 0xC9	; 201
 35c:	05 c0       	rjmp	.+10     	; 0x368 <display_character+0x1e>
 35e:	9f e9       	ldi	r25, 0x9F	; 159
 360:	98 0f       	add	r25, r24
 362:	9a 31       	cpi	r25, 0x1A	; 26
 364:	18 f4       	brcc	.+6      	; 0x36c <display_character+0x22>
 366:	99 ea       	ldi	r25, 0xA9	; 169
 368:	98 0f       	add	r25, r24
 36a:	01 c0       	rjmp	.+2      	; 0x36e <display_character+0x24>
 36c:	9f ef       	ldi	r25, 0xFF	; 255
 36e:	e6 2f       	mov	r30, r22
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	80 e1       	ldi	r24, 0x10	; 16
 374:	48 9f       	mul	r20, r24
 376:	e0 0d       	add	r30, r0
 378:	f1 1d       	adc	r31, r1
 37a:	11 24       	eor	r1, r1
 37c:	ef 73       	andi	r30, 0x3F	; 63
 37e:	ff 27       	eor	r31, r31
 380:	e0 50       	subi	r30, 0x00	; 0
 382:	f1 4c       	sbci	r31, 0xC1	; 193
 384:	90 83       	st	Z, r25
 386:	08 95       	ret

00000388 <disable_prescaler>:
 388:	60 91 61 00 	lds	r22, 0x0061	; 0x800061 <character_data+0x7f7c97>
 38c:	6e 7f       	andi	r22, 0xFE	; 254
 38e:	81 e6       	ldi	r24, 0x61	; 97
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	01 c0       	rjmp	.+2      	; 0x396 <ccp_write_io>

00000394 <generic_delay>:
 394:	08 95       	ret

00000396 <ccp_write_io>:
 396:	dc 01       	movw	r26, r24
 398:	28 ed       	ldi	r18, 0xD8	; 216
 39a:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <character_data+0x7f7c6a>
 39e:	6c 93       	st	X, r22
 3a0:	08 95       	ret

000003a2 <_exit>:
 3a2:	f8 94       	cli

000003a4 <__stop_program>:
 3a4:	ff cf       	rjmp	.-2      	; 0x3a4 <__stop_program>
